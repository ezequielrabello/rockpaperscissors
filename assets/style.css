@import url('https://fonts.googleapis.com/css2?family=Barlow+Semi+Condensed:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Jost:ital,wght@0,100..900;1,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

*, 
*::after, 
*::before {
    box-sizing: border-box;
}
* {
    margin: 0;
    padding: 0;
}
html {
    font-size: 62.5%;
}
body {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
    font-size: 1.6rem;
}
button, a {
    outline: none;
    text-decoration: none;
    cursor: pointer;
}
input,
button,
textarea,
select {
  font: inherit;
}
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
  text-transform: uppercase;
}
:root {
    /*---------Primary Colors----------*/
    --scissorsColor: linear-gradient(360deg, rgb(185, 128, 23) 50%, rgb(236, 169, 34) 100%);
    --paperColor: linear-gradient(360deg, rgb(59, 81, 196) 0%, rgb(86, 113, 245) 100%);
    --rockColor: linear-gradient(360deg, rgb(157, 37, 59) 0%, rgb(221, 64, 93) 100%);
    --lizardColor: linear-gradient(45deg, rgb(131, 79, 227) 0%, rgb(140, 93, 229) 100%);
    --spockColor: linear-gradient(45deg, rgb(64, 185, 206) 0%, rgb(82, 190, 209) 100%);
    --whiteColor: #fff;

    /*---------Neutral Colors----------*/
    --darkColor: #3b4363;
    --scoreTextColor: #2a46c0;
    --headerOutline: #606e85;

    /*---------Background Color----------*/
    --backgroundColor: radial-gradient(rgb(31, 55, 86), rgb(20, 21, 57));
    --silver: #bac8d3;
    --silverBackground: #eff0f2;

    /*---------Animations----------*/
    --animation-duration-fade-in-out: 600ms;
    --transition-timing-function: cubic-bezier(0.49, -0.62, 0.35, 0.35);
}
body {
    font-family: 'Barlow Semi Condensed', sans-serif;
    font-weight: 600;
    background: var(--backgroundColor);
}
main {
    overflow-x: clip;
    height: 100vh;
    padding-top: 5rem;
    
}
header {
    /* header style and position */
    border: 4px solid var(--headerOutline);
    border-radius: 10px;
    width: 430px;
    margin: 0 auto 3rem;
    /* Header inside elements display */
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem;
}
/* Header inside elements styles */
header .logoImg {
    position: relative;
    top: 4px;
    width: 10rem;
}
.scoreBox {
    /* Score box styles */
    background-color: var(--silverBackground);
    border-radius: 5px;
    /* Score box dimensions */
    padding: 0.5rem 2rem;
    /* Score box display */
    display: flex;
    align-items: center;
    /* Score box text style */
    color: var(--scoreTextColor);
    text-align: center;
}
#score {
    /* Score display */
    display: block;
    text-align: center;
    /* Score text style */
    font-weight: 700;
    font-size: 5.5rem;
    line-height: 100%;
    color: var(--darkColor);
}
.buttons-group {
    background: url(../images/bg-triangle.svg) center no-repeat;
    max-inline-size: 475px; /* width */
    block-size: 465px; /* height */
    margin-inline: auto;
    position: absolute;
    inset-inline: 0;
    z-index: 1;
}
.buttons-group button {
    position: absolute;
    outline: none;
    border: none;
}

button.choice {
  transition: transform ease-in 50ms, outline ease-in 0.2s;
}
.choice {
    --circle-size: 145px;
    --scale-buttons: 1;
    border-radius: 50%;
    block-size: calc(var(--circle-size) + 3px);
    inline-size: var(--circle-size);
    box-shadow: inset 0 -6px rgba(0, 0, 0, 0.2);
  }
.choice::before {
    --thickness: 16px;
    content: '';
    position: absolute;
    inset-inline-start: var(--thickness);
    inset-block-start: var(--thickness);
    block-size: calc(var(--circle-size) - 2 * var(--thickness));
    aspect-ratio: 1;
    border-radius: 50%;
    box-shadow: inset 0 6px rgba(0, 0, 0, 0.15);
    background: var(--background-image), linear-gradient(#dadada, #fcf4e9) ;
}

button.scissors {
    inset-inline-start: 65%;
    inset-block-start: 5%;
}
button.rock {
    inset-inline-start: 35%;
    inset-block-start: 60%;
}
button.paper {
    inset-inline-start: 5%;
    inset-block-start: 5%;
}
.scissors {
    --background-image: url(../images/icon-scissors.svg) center no-repeat;
    background: var(--scissorsColor);
}
.rock {
    --background-image: url(../images/icon-rock.svg) center no-repeat;
    background: var(--rockColor);
}
.paper {
    --background-image: url(../images/icon-paper.svg) center no-repeat;
    background: var(--paperColor);
}   
.rulesBtn {
    position: fixed;
    bottom: 2rem;       
    left: 50%;            
    transform: translateX(-50%); 
    z-index: 1000;
    text-transform: uppercase;
    background-color: transparent;
    color: white;
    padding: 0.7rem 3.7rem;
    border: 2px solid var(--headerOutline);
    border-radius: 8px;
    letter-spacing: 2px;
}

.rulesBtn:hover {
    transition: 300ms;
}
.modalContainer {
    background-color: var(--silverBackground);
    border-radius: 10px;
    display: flex;
    flex-direction: column;
    max-inline-size: 900px; /* width */
    block-size: 450px; /* height */
    margin: auto;
    position: absolute;
    bottom: 10rem;
    left: 50%;            
    transform: translateX(-50%); 
    z-index: 9999;
}

.modalContainer h1 {
    /* text style */
    text-align: center;
    font-weight: 700;
    color: var(--darkColor);
    margin-top: 1rem;
}

#gameRulesImg {
    max-inline-size: 80%;
    margin: 5rem auto;
}
.rulesBtn:hover,
.rulesBtn:focus-visible {
  box-shadow: 0px 0px 16px 0px white;
  outline: none;
}
.modal-close-btn  {
    position: absolute;
    bottom: 20px;
    left: 48%;
    border: none;
}

.modal-on {
    background: rgba(0, 0, 0, 0.5);
    transition: 200ms;
}

/* Game starts */

.fight {
    /* results layout */
    display: grid;
    grid-template-areas: 'user-choice result house-choice''you-picked . house-picked';
    justify-content: center;
    
    gap: 3rem;
    width: 80%;
    margin: 4rem auto;
    
}
.user-choice {
    position: relative;
    grid-area: user-choice;
}
.house-choice {
    position: relative;
}
.fight p.you-picked {
    grid-area: you-picked;
    font-weight: 700;
    color: var(--whiteColor);
    font-size: 1.5rem;
    text-align: center;
}
.fight p.house-picked {
    grid-area: house-picked;
    font-weight: 700;
    color: var(--whiteColor);
    font-size: 1.5rem;
    text-align: center;
}
.house-choice {
    grid-area: house-choice;
}

button.choice:hover,
button.choice:focus-visible {
  transform: scale(1.1);
  outline-width: 6px;
  outline-offset: 6px;
  outline-style: dotted;
  outline-color: var(--whiteColor);
  transition: 300ms;
}

.result {
    grid-column: 1 / -1; /* makes it span across all columns */
    justify-self: center; /* centers it horizontally */
    text-align: center; 
    transition-timing-function: var(--transition-timing-function);
    margin-top: 2rem;
}
#result-label {
    font-weight: 700;
    color: var(--whiteColor);
    font-size: 5rem;
}
.play-again {
    /* Score box styles */
    background-color: var(--silverBackground);
    border-radius: 5px;
    border: none;
    /* Score box dimensions */
    padding: 1rem 2rem;
    width: 100%;
    /* Score box display */
    display: flex;
    align-items: center;
    margin-top: 1rem;
    /* Score box text style */
    color: var(--scoreTextColor);
    text-align: center;
    justify-content: center;
    text-transform: uppercase;
    transition: 200ms;
    transform: var(--transition-timing-function);
}

.play-again:hover {
    transform: scale(1.1);
}

.winner::after {
    --winner-radius: 108px;
    --button-width: calc(var(--circle-size) / 2);
    --shadow-full-width: calc(100% + 2 * var(--winner-radius));
    --shadow-inset: calc(50% - var(--shadow-full-width) / 2);
    content: '';
    position: absolute;
    inset-inline-start: var(--shadow-inset);
    inset-block-start: var(--shadow-inset);
    block-size: var(--shadow-full-width);
    inline-size: var(--shadow-full-width);
    border-radius: 50%;
    pointer-events: none;
    background: radial-gradient(
      transparent var(--button-width),
      rgb(255 255 255 / 5%) var(--button-width),
      rgb(255 255 255 / 8%) 40%,
      rgb(255 255 255 / 3%) 40%,
      rgb(255 255 255 / 6%) 55%,
      rgb(255 255 255 / 2%) 55%
    );
}

.invisible {
    display: none;
}

@media screen and (min-width: 1366px) {
    header {
        width: 700px;
        margin-bottom: 2rem;
    }

    .fight {
        width: 700px;
        margin-top: 9rem;
    }

    .choice {
        --circle-size: 200px;
    }

    .choice::before {
        --thickness: 24px;
    }

    .fight {
        grid-template-areas: 'user-choice result house-choice''you-picked . house-picked';
        
    }

    .result {
        grid-area: result;
    }

    .winner::after {
    --winner-radius: 188px;
    }

    button.rock, button.paper, button.scissors {
        translate: -15%;
    }
}
@media screen and (max-width: 767px) {
  header {
    width: 90%;
    gap: 1rem;
  }

  .scoreBox {
    padding: 0.5rem 1.5rem;
  }

  .buttons-group {
    max-inline-size: 300px;
    block-size: 300px;
    background-size: contain;
  }

  .choice {
    --circle-size: 100px;
  }

  button.rock {
    inset-inline-start: 35%;
    inset-block-start: 70%;
  }

  button.paper {
    inset-inline-start: -5%;
    inset-block-start: -5%;
  }

  button.scissors {
    inset-inline-start: 75%;
    inset-block-start: -5%;
  }

  .fight {
    grid-template-areas: 
      'user-choice . house-choice' 
      'you-picked . house-picked' 
      'result';
    width: 90%;
    gap: 3rem;
    margin: 10rem auto;
    justify-content: center;
  }

  #result-label {
    font-size: 3rem;
  }

  .rulesBtn {
    bottom: 1rem;
    padding: 0.5rem 2rem;
  }

  .modalContainer {
    width: 90%;
    height: auto;
    padding: 2rem 1rem;
  }

  .modal-close-btn {
    left: 50%;
    transform: translateX(-50%);
  }
}

.fade-in {
  opacity: 0;
  animation: fadeIn 0.5s ease forwards;
}

@keyframes fadeIn {
  to {
    opacity: 1;
  }
}